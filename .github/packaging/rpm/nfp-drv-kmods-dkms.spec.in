%{?!module_name: %{error: You did not specify a module name (%%module_name)}}
%{?!version: %{error: You did not specify a module version (%%version)}}
%{?!release: %{error: You did not specify a module release (%%release)}}
%{?!packager: %define packager Corigine <smartnic-support@corigine.com>}
%{?!license: %define license GPL}
%{?!_dkmsdir: %define _dkmsdir /var/lib/dkms}
%{?!_srcdir: %define _srcdir %_prefix/src}
%{?!_datarootdir: %define _datarootdir %{_datadir}}

%define blacklist_file /etc/modprobe.d/blacklist-agilio-nfp-driver.conf

Summary:    %{module_name} %{version}-%{release} dkms package
Name:       %{module_name}-dkms
Version:    %{version}
Release:    %{release}
License:    %license
BuildArch:      noarch
Group:      System/Kernel
URL:            https://www.corigine.com.cn
Requires:       kernel-devel, dkms >= 1.95
BuildRequires:  dkms
AutoReqProv:    yes
# This package should not be installed side-by-side with the nfp-bsp-dkms package
# nor the bsp-dkms packages
Conflicts: nfp-bsp-dkms, ns-agilio-core-nic

%define debug_package %{nil}

%description
%{module_name} driver in DKMS format.

%prep
if [ "%mktarball_line" != "none" ]; then
        /usr/sbin/dkms mktarball -m %module_name -v %{version}-%{release} %mktarball_line --archive `basename %{module_name}-%{version}-%{release}.dkms.tar.gz`
        cp -af %{_dkmsdir}/%{module_name}/%{version}-%{release}/tarball/`basename %{module_name}-%{version}-%{release}.dkms.tar.gz` %{module_name}-%{version}-%{release}.dkms.tar.gz
fi

%install
if [ "$RPM_BUILD_ROOT" != "/" ]; then
        rm -rf $RPM_BUILD_ROOT
fi
mkdir -p $RPM_BUILD_ROOT/%{_srcdir}
mkdir -p $RPM_BUILD_ROOT/%{_datarootdir}/%{module_name}

if [ -d %{_sourcedir}/%{module_name}-%{version}-%{release} ]; then
        cp -Lpr %{_sourcedir}/%{module_name}-%{version}-%{release} $RPM_BUILD_ROOT/%{_srcdir}
fi

if [ -f %{module_name}-%{version}-%{release}.dkms.tar.gz ]; then
        install -m 644 %{module_name}-%{version}-%{release}.dkms.tar.gz $RPM_BUILD_ROOT/%{_datarootdir}/%{module_name}
fi

install -m 755 %{_sourcedir}/%{module_name}-%{version}-%{release}/common.postinst $RPM_BUILD_ROOT/%{_datarootdir}/%{module_name}/postinst
# Add blacklist of nfp_netvf modules
echo "# Prevents nfp_netvf from automatically loading on older kernels" > %{blacklist_file}
echo "blacklist nfp_netvf" >> %{blacklist_file}

%clean
if [ "$RPM_BUILD_ROOT" != "/" ]; then
        rm -rf $RPM_BUILD_ROOT
fi

%post
if ! [ -d "/lib/modules/$(uname -r)/build" ]; then
        # Check package manager: dnf or yum
        if [ -e /usr/bin/dnf ]; then
                PKG_MAN="dnf"
        else
                PKG_MAN="yum"
        fi
        # Show WARNING message if kernel-devel is not installed for current kernel version
        echo -e "\nWARNING: You do not have the 'kernel-devel' package installed"
        echo -e "for your current kernel version. NFP module will not be built."
        echo -e "The 'kernel-devel' package can be installed using:"
        echo -e "    ${PKG_MAN} install kernel-devel-\$(uname -r)"
fi
for POSTINST in %{_datarootdir}/%{module_name}/postinst; do
        if [ -f $POSTINST ]; then
                $POSTINST %{module_name} %{version}-%{release} %{_datarootdir}/%{module_name}
                exit $?
        fi
        echo "WARNING: $POSTINST does not exist."
done
echo -e "ERROR: DKMS version is too old and %{module_name} was not"
echo -e "built with legacy DKMS support."
echo -e "You must either rebuild %{module_name} with legacy postinst"
echo -e "support or upgrade DKMS to a more current version."
exit 1

%preun
echo -e
echo -e "Uninstall of %{module_name} module (version %{version}-%{release}) beginning:"
dkms remove -m %{module_name} -v %{version}-%{release} --all --rpm_safe_upgrade
rm -f %{blacklist_file}
exit 0

%files
%defattr(-,root,root)
%{_srcdir}
%{_datarootdir}/%{module_name}/

%changelog
* %(date "+%a %b %d %Y") %packager %{version}-%{release}
- Automatic build by DKMS
